{
  "info": {
    "name": "Book Store API - Complete",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:5000/api/v1"
    },
    {
      "key": "token",
      "value": ""
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:5000/health",
          "protocol": "http",
          "host": ["localhost"],
          "port": "5000",
          "path": ["health"]
        }
      }
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test User\",\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\",\n  \"role\": \"user\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/register",
              "host": ["{{base_url}}"],
              "path": ["users", "register"]
            }
          }
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test('Token is present', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.token).to.exist;",
                  "    pm.collectionVariables.set('token', jsonData.token);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/login",
              "host": ["{{base_url}}"],
              "path": ["users", "login"]
            }
          }
        }
      ]
    },
    {
      "name": "Books",
      "item": [
        {
          "name": "Get All Books",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/books",
              "host": ["{{base_url}}"],
              "path": ["books"]
            }
          }
        },
        {
          "name": "Search Books",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/books/search?q=test",
              "host": ["{{base_url}}"],
              "path": ["books", "search"],
              "query": [{"key": "q", "value": "test"}]
            }
          }
        },
        {
          "name": "Get Book by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/books/{{book_id}}",
              "host": ["{{base_url}}"],
              "path": ["books", "{{book_id}}"]
            }
          }
        },
        {
          "name": "Create Book (Admin)",
          "request": {
            "method": "POST",
            "header": [
              {"key": "Content-Type", "value": "application/json"},
              {"key": "Authorization", "value": "Bearer {{token}}"}
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Book\",\n  \"author\": \"Test Author\",\n  \"genre\": \"Fiction\",\n  \"price\": 19.99,\n  \"description\": \"A test book\",\n  \"stock\": 10\n}"
            },
            "url": {
              "raw": "{{base_url}}/books",
              "host": ["{{base_url}}"],
              "path": ["books"]
            }
          }
        }
      ]
    },
    {
      "name": "Authors",
      "item": [
        {
          "name": "Get All Authors",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/authors",
              "host": ["{{base_url}}"],
              "path": ["authors"]
            }
          }
        }
      ]
    },
    {
      "name": "Genres",
      "item": [
        {
          "name": "Get All Genres",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/genres",
              "host": ["{{base_url}}"],
              "path": ["genres"]
            }
          }
        }
      ]
    },
    {
      "name": "Cart",
      "item": [
        {
          "name": "Get Cart",
          "request": {
            "method": "GET",
            "header": [
              {"key": "Authorization", "value": "Bearer {{token}}"}
            ],
            "url": {
              "raw": "{{base_url}}/cart",
              "host": ["{{base_url}}"],
              "path": ["cart"]
            }
          }
        },
        {
          "name": "Add to Cart",
          "request": {
            "method": "POST",
            "header": [
              {"key": "Content-Type", "value": "application/json"},
              {"key": "Authorization", "value": "Bearer {{token}}"}
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"bookId\": \"{{book_id}}\",\n  \"quantity\": 1\n}"
            },
            "url": {
              "raw": "{{base_url}}/cart",
              "host": ["{{base_url}}"],
              "path": ["cart"]
            }
          }
        }
      ]
    },
    {
      "name": "Orders",
      "item": [
        {
          "name": "Get Orders",
          "request": {
            "method": "GET",
            "header": [
              {"key": "Authorization", "value": "Bearer {{token}}"}
            ],
            "url": {
              "raw": "{{base_url}}/orders",
              "host": ["{{base_url}}"],
              "path": ["orders"]
            }
          }
        },
        {
          "name": "Create Order",
          "request": {
            "method": "POST",
            "header": [
              {"key": "Content-Type", "value": "application/json"},
              {"key": "Authorization", "value": "Bearer {{token}}"}
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"items\": [\n    {\n      \"bookId\": \"{{book_id}}\",\n      \"quantity\": 1\n    }\n  ],\n  \"shippingAddress\": \"123 Test St, Test City\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/orders",
              "host": ["{{base_url}}"],
              "path": ["orders"]
            }
          }
        }
      ]
    },
    {
      "name": "Profile",
      "item": [
        {
          "name": "Get Profile",
          "request": {
            "method": "GET",
            "header": [
              {"key": "Authorization", "value": "Bearer {{token}}"}
            ],
            "url": {
              "raw": "{{base_url}}/profile",
              "host": ["{{base_url}}"],
              "path": ["profile"]
            }
          }
        }
      ]
    },
    {
      "name": "Analytics",
      "item": [
        {
          "name": "Get Analytics",
          "request": {
            "method": "GET",
            "header": [
              {"key": "Authorization", "value": "Bearer {{token}}"}
            ],
            "url": {
              "raw": "{{base_url}}/analytics",
              "host": ["{{base_url}}"],
              "path": ["analytics"]
            }
          }
        }
      ]
    }
  ]
}